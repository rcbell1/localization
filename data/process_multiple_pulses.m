clear; close all

% path = '3/wired_center/rx9/';
% path = '3 - outdoors - 12_20_2019/tx_base/rx9/';
% path = '3/tx_base/rx1/';
% path = '3/tx_side/rx1/';
% path = '3/tx_opp_side/rx1/';
% path = '5 - wireless tests desk/tx_center/rfs9/6/';
% path = '8 - long wires tx sync/tx_center/rfs9/1/';
% path = '11 - long wires 01_20_2020/tx_center/rfs14/1/';
% path = '12 - outdoors - 01_20_2020/tx_base/rfs14/2/';
path = '14/tx_center/rfs9/1/';
nsamp_shift = 00; % symbols to shift in same ref frame as zeroes above
fs_rx = 200e6/22;   % sample rate of receiver (denoms 22,40,200)

start_bound_idx = 1;    % this is broken right now, need to fix
stop_bound_idx = 74;

fs_tx = 200e6/66;        % sample rate of transmitter
sps = 2;            % samples per symbol at transmitter
nzeros = 3000;     % number of zeros (in symbols) inserted by transmitter
nsympulse = 1000;      % pulse length (in symbols) generated by transmitter
npulses = 100;      % number of pulses expected in the data
shift_up = 0.02;    % shift the zoomed in series for better viewing
peak_width = 10;    % number of samples to see on either side of corr peak
nstds = 55;          % draw threshold this many stds up

nitems = ceil(sps*(nsympulse+nzeros)*npulses*fs_rx/fs_tx);
Tptx = (nzeros+nsympulse)*sps/fs_tx;    % time per transmitted pulse
Nprx = uint32(Tptx*fs_rx);  % number of samples per pulse at receiver

Ts_rx = 1/fs_rx;
fsym = fs_tx/sps;
Tsym = 1/fsym;
sps_rx = Tsym/Ts_rx;   % effective sps at receiver
nsamp_shift = ceil(sps_rx)*nsamp_shift; % shift the correlating window

x1raw = read_complex_binary([path 'rx1.dat']);
x2raw = read_complex_binary([path 'rx2.dat']);
x3raw = read_complex_binary([path 'rx3.dat']);
x1 = x1raw;
x2 = x2raw;
x3 = x3raw;

% ignore the first pulse because it sometimes contains transients from
% radio startup that can effect performance
npulses = npulses - 1; % number after dropping the first
bounds = floor(Nprx+nsamp_shift:Nprx:npulses*Nprx+nsamp_shift+1); % boundaries betweeen pulses

% this is dealing with the end of sequence conditions by padding or
% contracting as needed.
x1(bounds(end)) = 0;    % zero pad to the last bound if needed
x2(bounds(end)) = 0;
x3(bounds(end)) = 0;
% x1 = x1(1:bounds(end)); % reduce if needed
% x2 = x2(1:bounds(end));
% x3 = x3(1:bounds(end));
x1 = x1(bounds(start_bound_idx):bounds(stop_bound_idx)); % reduce if needed
x2 = x2(bounds(start_bound_idx):bounds(stop_bound_idx));
x3 = x3(bounds(start_bound_idx):bounds(stop_bound_idx));
bounds = bounds(start_bound_idx:stop_bound_idx-2);

% y1 = reshape(x1(bounds(1):end-1), Nprx, []).';
% y2 = reshape(x2(bounds(1):end-1), Nprx, []).';
% y3 = reshape(x3(bounds(1):end-1), Nprx, []).';

yblock = [x1 x2 x3];

save([path 'rx_pulses_sliced.mat'],'yblock','fs_rx','fs_tx','sps', ...
'nsympulse', 'Nprx', 'bounds', 'sps_rx')

%% Plots
ymax = max(max(abs(yblock)));
ymax = 1.1*ymax;

% y1last = y1(end,:); % use the last pulse
% y2last = y2(end,:);
% y3last = y3(end,:);

y1last = x1(bounds(stop_bound_idx-2):end); % use the last pulse
y2last = x2(bounds(stop_bound_idx-2):end);
y3last = x3(bounds(stop_bound_idx-2):end);

figure
subplot(4,3,1)
plot(real(x1)); hold all
plot(imag(x1))
plot([bounds; bounds], repmat([-1;1],1,length(bounds)), 'k--')
for ii = 1:length(bounds)
    text(double(bounds(ii)), 1.1*ymax, sprintf('%i', ii), ...
        'horizontalalignment','center', 'FontSize', 10,'clipping','on')
end
title('Rx1 192.168.10.2')
axis([-inf inf -1.2*ymax 1.2*ymax])
subplot(4,3,2)
plot(real(x2)); hold all
plot(imag(x2))
plot([bounds; bounds], repmat([-1;1],1,length(bounds)), 'k--')
for ii = 1:length(bounds)
    text(double(bounds(ii)), 1.1*ymax, sprintf('%i', ii), ...
        'horizontalalignment','center', 'FontSize', 10,'clipping','on')
end
title('Rx2 192.168.11.2')
axis([-inf inf -1.2*ymax 1.2*ymax])
subplot(4,3,3)
plot(real(x3)); hold all
plot(imag(x3))
plot([bounds; bounds], repmat([-1;1],1,length(bounds)), 'k--')
for ii = 1:length(bounds)
    text(double(bounds(ii)), 1.1*ymax, sprintf('%i', ii), ...
        'horizontalalignment','center', 'FontSize', 10,'clipping','on')
end
title('Rx3 192.168.12.2')
axis([-inf inf -1.2*ymax 1.2*ymax])

subplot(4,3,4:6)
plot(real(y1last)+2*shift_up); hold all
plot(imag(y1last)+2*shift_up)
plot(real(y2last)+shift_up)
plot(imag(y2last)+shift_up)
plot(real(y3last))
plot(imag(y3last))
title('Zoomed in Correlation Region')
xlabel('Sample Number')
ylabel('Magnitude')
legend('Rx1','Rx2','Rx3')
axis tight

[c12, lags12] = xcorr(y1last,y2last);
[c13, lags13] = xcorr(y1last,y3last);
cmag12 = abs(c12);
mean12 = mean(cmag12);
std12 = std(cmag12);
cmag13 = abs(c13);
mean13 = mean(cmag13);
std13 = std(cmag13);
[mval12, midx12] = max(cmag12);
[mval13, midx13] = max(cmag13);
clen = 2*Nprx-1;  % each xi stream should be equal length assumption
mlagidx12 = midx12-median(midx12);
mlagidx13 = midx13-median(midx13);

subplot(4,3,7:8)
plot(lags12, abs(c12)-mean12); hold all
plot([lags12(1) lags12(end)], [nstds*std12 nstds*std12], 'r--')
axis([lags12(1) lags12(end) -inf inf])
xlabel('Lag12')
ylabel('Correlation Magnitude')
title('Cross-correlation Rx1 and Rx2')
text(mlagidx12+10,mval12/2,sprintf('Lag Index of Peak: %i\nPeak Value: %f', mlagidx12, mval12))

subplot(4,3,9)
plot(lags12, abs(c12)-mean12, 'b.-', 'MarkerSize', 12); hold all
plot([-peak_width peak_width], [nstds*std12 nstds*std12], 'r--')
ytop = max((nstds+3)*std12, max(cmag12));
axis([mlagidx12-peak_width mlagidx12+peak_width (nstds-3)*std12 ytop*1.03])
xlabel('Lag12')
ylabel('Correlation Magnitude')
title('Cross-correlation Rx1 and Rx2')

subplot(4,3,10:11)
plot(lags13, abs(c13)-mean13); hold all
plot([lags13(1) lags13(end)], [nstds*std13 nstds*std13], 'r--')
axis([lags13(1) lags13(end) -inf inf])
xlabel('Lag13')
ylabel('Correlation Magnitude')
title('Cross-correlation Rx1 and Rx3')
text(mlagidx13+10,mval13/2,sprintf('Lag Index of Peak: %i\nPeak Value: %f', mlagidx13, mval13))

subplot(4,3,12)
plot(lags13, abs(c13)-mean13, 'b.-', 'MarkerSize', 12); hold all
plot([-peak_width peak_width], [nstds*std13 nstds*std13], 'r--')
ytop = max((nstds+3)*std13, max(cmag13));
axis([mlagidx13-peak_width mlagidx13+peak_width (nstds-3)*std13 ytop*1.03])
xlabel('Lag13')
ylabel('Correlation Magnitude')
title('Cross-correlation Rx1 and Rx3')